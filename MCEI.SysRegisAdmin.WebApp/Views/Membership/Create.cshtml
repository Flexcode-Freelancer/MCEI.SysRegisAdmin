@using MCEI.SysRegisAdmin.EN.ProfessionOrStudy___EN
@model MCEI.SysRegisAdmin.EN.Membership___EN.Membership

@{
    ViewData["Title"] = "Crear Membresia";
    List<ProfessionOrStudy> professionOrStudies = ViewBag.ProfessionOrStudies as List<ProfessionOrStudy>;
}
<h1>Crear Nueva Membresia</h1>
<span>@ViewBag.Error</span>
<hr />
<form id="Form" asp-action="Create" onsubmit="CreateRecord(event)" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly"></div>
    <h3>Informacion Personal</h3>
    <hr />
    <div>
        <label asp-for="Name"></label>
        <input asp-for="Name" placeholder="Ingresar"/>
        <span asp-validation-for="Name"></span>
    </div>
    <div>
        <label asp-for="LastName"></label>
        <input asp-for="LastName" placeholder="Ingresar" />
        <span asp-validation-for="LastName"></span>
    </div>
    <div>
        <label asp-for="Dui"></label>
        <input asp-for="Dui" id="inputDui" placeholder="XXXXXXXX-X"/>
        <span asp-validation-for="Dui"></span>
    </div>
    <div>
        <input type="checkbox" id="isMinorCheckbox" />
        <label>Soy Menor de Edad</label>
    </div>
    <div>
        <label asp-for="DateOfBirth"></label>
        <input asp-for="DateOfBirth"/>
        <span asp-validation-for="DateOfBirth"></span>
    </div>
    <div>
        <label asp-for="Age"></label>
        <input asp-for="Age" readonly/>
        <span asp-validation-for="Age"></span>
    </div>
    <div>
        <label asp-for="Gender"></label>
        <select name="Gender">
            <option value="Seleccionar">Seleccionar</option>
            <option value="Masculino">Masculino</option>
            <option value="Femenino">Femenino</option>
        </select>
        <span asp-validation-for="Gender"></span>
    </div>
    <div>
        <label asp-for="CivilStatus"></label>
        <select name="CivilStatus">
            <option value="Seleccionar">Seleccionar</option>
            <option value="Soltero/a">Soltero/a</option>
            <option value="Casado/a">Casado/a</option>
            <option value="Divorciado/a">Divorciado/a</option>
            <option value="Viudo/a">Viudo/a</option>
        </select>
        <span asp-validation-for="CivilStatus"></span>
    </div>
    <div>
        <label asp-for="Phone"></label>
        <input asp-for="Phone" id="inputPhone" placeholder="0000-0000"/>
        <span asp-validation-for="Phone"></span>
    </div>
    <div>
        <label asp-for="Address"></label>
        <input asp-for="Address" placeholder="Ingresar" />
        <span asp-validation-for="Address"></span>
    </div>
    <div>
        <label asp-for="IdProfessionOrStudy"></label>
        <select id="IdProfessionOrStudy" name="IdProfessionOrStudy">
            @foreach (var profesionOrStudy in professionOrStudies!)
            {
                <option value="@profesionOrStudy.Id">@profesionOrStudy.Name</option>
            }
        </select>
        <span asp-validation-for="IdProfessionOrStudy"></span>
    </div>
    <div>
        <label asp-for="PlaceOfWorkOrStudy"></label>
        <input asp-for="PlaceOfWorkOrStudy" placeholder ="Ingresar" />
        <span asp-validation-for="PlaceOfWorkOrStudy"></span>
    </div>
    <div>
        <label asp-for="WorkOrStudyPhone"></label>
        <input asp-for="WorkOrStudyPhone" id="inputPhoneEmergency" placeholder="0000-0000"/>
        <span asp-validation-for="WorkOrStudyPhone"></span>
    </div>
    <br />
    <h3>Informacion Complementaria</h3>
    <hr />
    <div class="mb-3">
        <label asp-for="ConversionDate"></label>
        <input asp-for="ConversionDate"/>
        <span asp-validation-for="ConversionDate"></span>
    </div>
    <div>
        <label asp-for="PlaceOfConversion"></label>
        <input asp-for="PlaceOfConversion" placeholder="Ingresar" />
        <span asp-validation-for="PlaceOfConversion"></span>
    </div>
    <div>
        <label asp-for="WaterBaptism">Buatizmo en Agua</label>
        <select name="WaterBaptism">
            <option value="SELECCIONAR">Seleccionar</option>
            <option value="Si, Dentro de la Mision">Si, Dentro de la Mision</option>
            <option value="Si, Fuera de la Mision">Si, Fuera de la Mision</option>
        </select>
        <span asp-validation-for="WaterBaptism"></span>
    </div>
    <div>
        <label asp-for="BaptismOfTheHolySpirit">Bautizmo Por El Espiritu Santo</label>
        <select name="BaptismOfTheHolySpirit">
            <option value="Seleccionar">Seleccionar</option>
            <option value="Si">Si</option>
            <option value="No">No</option>
        </select>
        <span asp-validation-for="BaptismOfTheHolySpirit"></span>
    </div>
    <div>
        <label asp-for="PastorsName">Nombre del Pastor</label>
        <input asp-for="PastorsName" placeholder="Ingresar" />
        <span asp-validation-for="PastorsName"></span>
    </div>
    <div>
        <label asp-for="SupervisorsName">Nombre del Supervisor</label>
        <input asp-for="SupervisorsName" placeholder="Ingresar" />
        <span asp-validation-for="SupervisorsName"></span>
    </div>
    <div>
        <label asp-for="LeadersName">Nombre del Lider</label>
        <input asp-for="LeadersName" placeholder="Ingresar"/>
        <span asp-validation-for="LeadersName"></span>
    </div>
    <div>
        <label asp-for="TimeToGather"></label>
        <input asp-for="TimeToGather" placeholder="Ingresar" />
        <span asp-validation-for="TimeToGather"></span>
    </div>
    <div>
        <label asp-for="Zone"></label>
        <select name="Zone">
            <option value="1">Zona 1</option>
            <option value="2">Zona 2</option>
            <option value="3">Zona 3</option>
        </select>
        <span asp-validation-for="Zone"></span>
    </div>
    <div>
        <label asp-for="District"></label>
        <select name="District">
            <option value="1">Distrito 1</option>
            <option value="2">Distrito 2</option>
        </select>
        <span asp-validation-for="District"></span>
    </div>
    <div>
        <label asp-for="Sector"></label>
        <select name="Sector">
            <option value="1">Sector 1</option>
            <option value="2">Sector 2</option>
            <option value="3">Sector 3</option>
        </select>
        <span asp-validation-for="Sector"></span>
    </div>
    <div>
        <label asp-for="Cell"></label>
        <select name="Cell">
            <option value="1">Celula 1</option>
            <option value="2">Celula 2</option>
            <option value="3">Celula 3</option>
            <option value="4">Celula 4</option>
            <option value="5">Celula 5</option>
        </select>
        <span asp-validation-for="Cell"></span>
    </div>
    <div>
        <label asp-for="Status"></label>
        <select name="Status">
            <option value="1">Activo</option>
            <option value="2">Inactivo</option>
        </select>
        <span asp-validation-for="Status"></span>
    </div>
    <div>
        <label asp-for="CommentsOrObservations"></label>
        <input asp-for="CommentsOrObservations" placeholder="Ingresar" />
        <span asp-validation-for="CommentsOrObservations"></span>
    </div>
    <div>
        <svg id="barcode"></svg>
    </div>
    <div>
        <label for="imagen">Seleccionar imagen:</label>
        <input type="file" id="imagen" name="imagen" onchange="mostrarImagen()" asp-for="ImageData" />
    </div>
    <div>
        <img id="imagenPreview" src="#" alt="Vista previa de la imagen" style="max-width: 100%; max-height: 200px; display: none;" />
    </div>
    <div>
        <input type="submit" value="Crear Membresia"/>
        <a asp-action="Index">Regresar a La Lista</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function showErrorAlert(message) {
            Swal.fire({
                title: 'Error',
                text: message,
                icon: 'error'
            });
        }
        // Mostrar alerta de ViewBag.Error si es necesario
        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            @:showErrorAlert('@ViewBag.Error');
        }
        // Captura el checkbox "Soy menor de edad"
        var isMinorCheckbox = document.getElementById("isMinorCheckbox");

        // Campos de nombre, apellido y fecha de nacimiento
        const nameInput = document.querySelector('input[name="Name"]');
        const lastNameInput = document.querySelector('input[name="LastName"]');
        const birthDateInput = document.querySelector('input[name="DateOfBirth"]');
        const duiInput = document.getElementById("inputDui");

        // Función para formatear la fecha en DDMMAA
        function formatBirthDate(birthDate) {
            const day = String(birthDate.getDate() +1).padStart(2, '0');
            const month = String(birthDate.getMonth() + 1).padStart(2, '0');
            const year = String(birthDate.getFullYear()).slice(-2);
            return `${day}${month}${year}`;
        }

        // Función para generar el valor para Dui
        function generateDuiValue() {
            // Verifica que los campos de nombre, apellido y fecha de nacimiento no estén vacíos
            const nameValue = nameInput.value.trim();
            const lastNameValue = lastNameInput.value.trim();
            const birthDateValue = birthDateInput.value.trim();

            // Si alguno de los campos está vacío, no establecer ningún valor en `Dui`
            if (!nameValue || !lastNameValue || !birthDateValue) {
                return;
            }

            // Extrae las iniciales de los campos de nombre y apellido
            const nameInitial = nameValue.charAt(0).toUpperCase();
            const lastNameInitial = lastNameValue.charAt(0).toUpperCase();

            // Formatea la fecha de nacimiento
            const birthDate = new Date(birthDateValue);
            const formattedBirthDate = formatBirthDate(birthDate);

            // Concatenar iniciales y fecha de nacimiento
            const newDuiValue = `${nameInitial}${lastNameInitial}${formattedBirthDate}`;

            // Establecer el valor generado como valor del campo Dui
            duiInput.value = newDuiValue;

            // Actualizar el código de barras con el valor de Dui
            actualizarCodigoDeBarras();
        }

        // Función para manejar el evento de cambio del checkbox
        function handleCheckboxChange() {
            if (isMinorCheckbox.checked) {
                // Si el checkbox está marcado, marcar Dui como solo lectura
                duiInput.readOnly = true;
                // Generar el valor para Dui
                generateDuiValue();
            } else {
                // Si el checkbox está desmarcado, hacer Dui editable
                duiInput.readOnly = false;
                // Limpiar el campo Dui
                duiInput.value = '';
            }
        }

        // Función para actualizar el código de barras
        function actualizarCodigoDeBarras() {
            var codeDui = duiInput.value;
            JsBarcode("#barcode", codeDui); // Generar el código de barras usando el valor actual
        }

        // Asignar el evento de cambio al checkbox
        isMinorCheckbox.addEventListener("change", handleCheckboxChange);

        // Asignar evento `input` a `duiInput` para que actualice el código de barras cada vez que se modifique `Dui`
        duiInput.addEventListener("input", function () {
            actualizarCodigoDeBarras();
        });



        document.addEventListener("DOMContentLoaded", function () {
            // Insercion de (-) al Dui, Ademas de Generar Codigo de Barras En Base Al Dui
            function formatDui(inputValue) {
                inputValue = inputValue.replace(/\D/g, ''); // Remover todos los caracteres que no sean dígitos
                var formattedValue = '';
                for (var i = 0; i < inputValue.length; i++) {
                    if (i == 8) {
                        formattedValue += '-' + inputValue.charAt(i);
                    } else {
                        formattedValue += inputValue.charAt(i);
                    }
                }
                formattedValue = formattedValue.substring(0, 10); // Limitar la longitud total a 10 caracteres, incluyendo el guion
                return formattedValue;
            }

            function actualizarCodigoDeBarras() {
                var codeDui = document.getElementById("inputDui").value;
                JsBarcode("#barcode", codeDui); // Generar el código de barras usando el valor actual
            }

            // Calculo De La Edad En Base a La Fecha De Nacimiento
            const birthDateInput = document.querySelector('input[name="DateOfBirth"]');
            const ageInput = document.querySelector('input[name="Age"]');

            function calculateAge() {
                const birthDateValue = birthDateInput.value.trim();
                if (birthDateValue !== "") {
                    const birthDate = new Date(birthDateValue);
                    const currentDate = new Date();
                    let age = currentDate.getFullYear() - birthDate.getFullYear(); // Calcule la edad restando el año de nacimiento del año actual

                    // Ajusta la edad si la fecha de nacimiento aún no ha ocurrido este año
                    if (birthDate.getMonth() > currentDate.getMonth() ||
                        (birthDate.getMonth() === currentDate.getMonth() && birthDate.getDate() > currentDate.getDate())) {
                        age--;
                    }
                    ageInput.value = age; // Actualizar el campo de edad
                } else {
                    ageInput.value = ""; // Desactive el campo de edad si no se proporciona ninguna fecha de nacimiento
                }
            }

            // Insercion de (-) despues de cada 4 numeros en los numeros de telefono
            const inputPhone = document.getElementById('inputPhone');
            const inputPhoneEmergency = document.getElementById('inputPhoneEmergency');

            function formatPhoneNumber(input) {
                let phoneNumber = input.value.replace(/\D/g, ''); // Elimina cualquier carácter que no sea número
                if (phoneNumber.length > 4) {
                    phoneNumber = phoneNumber.slice(0, 4) + '-' + phoneNumber.slice(4, 8); // Formatea el número con un guion después de los primeros 4 dígitos
                }
                input.value = phoneNumber;
            }

            // Asignar eventos
            document.getElementById('inputDui').addEventListener('input', function (event) {
                var inputValue = event.target.value;
                var formattedValue = formatDui(inputValue);
                event.target.value = formattedValue;
                actualizarCodigoDeBarras();
            });

            birthDateInput.addEventListener('change', calculateAge); // Agregar detector de eventos para el cambio en la fecha de nacimiento
            inputPhone.addEventListener('input', function (e) {
                formatPhoneNumber(e.target);
            });
            inputPhoneEmergency.addEventListener('input', function (e) {
                formatPhoneNumber(e.target);
            });

            // Llamadas iniciales
            actualizarCodigoDeBarras(); // Generar el código de barras inicial
            calculateAge(); // Calcular la antigüedad cuando se carga la página
        });

        // Inicializamos el Plugin de Autocompletado y Busqueda De Profesion u Oficio
        $(document).ready(function () {
            $('#IdProfessionOrStudy').select2();
        });

        // Método Para Mostrar Vista Previa De La Imagen Seleccionada
        function mostrarImagen() {
            var archivo = document.getElementById('imagen').files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var imagenPreview = document.getElementById('imagenPreview');
                imagenPreview.src = e.target.result;
                imagenPreview.style.display = 'block';
            };
            reader.readAsDataURL(archivo);
        }

        // Alerta con SweetAlert2
        function CreateRecord(e) {
            e.preventDefault();
            const form = document.getElementById('Form');
            const inputs = document.querySelectorAll('.form-input');
            const nameFields = ['Name', 'LastName', 'PastorsName', 'SupervisorsName', 'LeadersName', 'TimeToGather'];
            const regex = /^[A-ZÑa-zñáéíóúÁÉÍÓÚ. ]+$/;

            let isValid = true;

            // Validar que los campos nameFields solo contengan letras, punto y espacios
            nameFields.forEach((field) => {
                const input = document.querySelector(`#${field}`);
                if (!regex.test(input.value)) {
                    isValid = false;
                }
            });

            // Si la validación falla, muestra una alerta advirtiendo al usuario
            if (!isValid) {
                Swal.fire({
                    title: '!Advertencia!',
                    text: 'Ciertos Campos Solo Deben Tener Letras, Revisa Tu Ficha',
                    icon: 'warning',
                    confirmButtonText: 'Aceptar'
                });
                return;
            }

            // Si todos los campos son válidos, muestra la alerta de confirmación
            Swal.fire({
                title: '¿Guardar Nuevo Registro?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Sí, Guardar Registro'
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        }
    </script>
}
