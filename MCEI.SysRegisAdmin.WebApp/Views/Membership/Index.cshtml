@using MCEI.SysRegisAdmin.EN.ProfessionOrStudy___EN
@model IEnumerable<MCEI.SysRegisAdmin.EN.Membership___EN.Membership>

@{
    ViewData["Title"] = "Membresia";
    List<ProfessionOrStudy> professionOrStudies = ViewBag.ProfessionOrStudies as List<ProfessionOrStudy>;
}
<h1>Mantenimiento Para Membresia</h1>
<hr />
<div class="container">
    <form asp-action="Index">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="Name">Nombre</label>
                    <input type="text" class="form-control" name="Name" placeholder="Ingresar" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="LastName">Apellido</label>
                    <input type="text" class="form-control" name="LastName" placeholder="Ingresar" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="Dui">Dui</label>
                    <input type="text" class="form-control" name="Dui" id="inputDui" placeholder="Ingresar" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdProfessionOrStudy">Profesion u Oficio</label>
                    <select id="IdProfessionOrStudy" name="IdProfessionOrStudy" class="select2 form-control">
                        @foreach (var item in professionOrStudies!)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="Status">Estatus</label>
                    <select class="form-control" name="Status">
                        <option value="1">Activo</option>
                        <option value="2">Inactivo</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <input type="submit" class="btn btn-primary" value="Buscar Miembro" /> &nbsp;&nbsp;
                    <a asp-action="Create" class="btn btn-secondary">Nueva Membresia</a>
                </div>
            </div>
        </div>
    </form>
</div>

<h2>Tabla de Resultados</h2>
<table id="ResultData" class="hover" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CivilStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdProfessionOrStudy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CivilStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProfessionOrStudy!.Name)
                </td>
                @if (item.Status == 1)
                {
                    <td>Activo</td>
                }
                else if (item.Status == 2)
                {
                    <td>Inactivo</td>
                }
                else
                {
                    <td></td>
                }
                <td>
                    @Html.ActionLink("Modificar", "Edit", new { id = item.Id }, new { @class = "" }) |
                    @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "" }) |
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "" })
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>

        // Inicializamos el Plugin de Autocompletado y Busqueda De Profesion u Oficio
        $(document).ready(function () {
            $('#IdProfessionOrStudy').select2();

            // Ocultar el select original
            $('#IdProfessionOrStudy').hide();
        });
        
        document.getElementById('inputDui').addEventListener('input', function (event) {
            var inputValue = event.target.value;
            var formattedValue = formatDui(inputValue);
            event.target.value = formattedValue;
        });

        function formatDui(inputValue) {
            inputValue = inputValue.replace(/\D/g, ''); // Remover todos los caracteres que no sean dígitos
            var formattedValue = '';
            for (var i = 0; i < inputValue.length; i++) {
                if (i == 8) {
                    formattedValue += '-' + inputValue.charAt(i);
                } else {
                    formattedValue += inputValue.charAt(i);
                }
            }
            // Limitar la longitud total a 10 caracteres, incluyendo el guion
            formattedValue = formattedValue.substring(0, 10);
            return formattedValue;
        }

        new DataTable('#ResultData', {
            info: false,
            order: false,
            Response: true,
            pagingType: 'simple_numbers',
            language: {
                search: 'Busqueda Rapida :',
                searchPlaceholder: 'Ingresar',
                lengthMenu: '_MENU_ Mostrar',
                emptyTable: 'No Hay Datos Que Coincidan Con Su Criterio De Búsqueda.',
                zeroRecords: 'No Existen Registros Segun La Busqueda',
                processing: 'Procesando...',
            }
        });

        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 8000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });

        // Comprobar si hay mensajes de éxito y mostrar notificaciones del sistema
        const successMessages = {
            Creado: '@TempData["SuccessMessageCreate"]',
            Modificado: '@TempData["SuccessMessageUpdate"]',
            Eliminado: '@TempData["SuccessMessageDelete"]'
        };

        for (const messageType in successMessages) {
            const message = successMessages[messageType];
            if (message) {
                Toast.fire({
                    icon: "success",
                    title: `¡${messageType} Exitosamente!`,
                    text: message
                });
            }
        }
    </script>
}